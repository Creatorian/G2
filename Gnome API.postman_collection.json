{
	"info": {
		"_postman_id": "d6332487-c361-4b78-b7bb-6ed1efcc6605",
		"name": "Gnome API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12622722"
	},
	"item": [
		{
			"name": "Products",
			"item": [
				{
					"name": "List Products",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/product/list?page=1&page-size=10&date-from=2024-01-01&min-players=5&max-players=7&sort-by=created-date-time&sort-order=desc",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"product",
								"list"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "page-size",
									"value": "10"
								},
								{
									"key": "date-from",
									"value": "2024-01-01"
								},
								{
									"key": "date-to",
									"value": "2024-12-31",
									"disabled": true
								},
								{
									"key": "name",
									"value": "",
									"disabled": true
								},
								{
									"key": "slug",
									"value": "catan",
									"disabled": true
								},
								{
									"key": "min-players",
									"value": "5"
								},
								{
									"key": "max-players",
									"value": "7"
								},
								{
									"key": "min-playing-time",
									"value": "30",
									"disabled": true
								},
								{
									"key": "max-playing-time",
									"value": "120",
									"disabled": true
								},
								{
									"key": "complexity",
									"value": "3",
									"disabled": true
								},
								{
									"key": "rating",
									"value": "4",
								},
								{
									"key": "min-price",
									"value": "20.00",
									"disabled": true
								},
								{
									"key": "max-price",
									"value": "40.00",
									"disabled": true
								},
								{
									"key": "in-stock-only",
									"value": "true",
									"disabled": true
								},
								{
									"key": "sort-by",
									"value": "created-date-time"
								},
								{
									"key": "sort-order",
									"value": "desc"
								},
								{
									"key": "category-slugs",
									"value": "strategy-games,card-games",
									"disabled": true
								}
							]
						},
						"description": "Get paginated list of products with filtering and sorting"
					},
					"response": []
				},
				{
					"name": "Get Product by Slug",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/product/catan",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"product",
								"catan"
							]
						},
						"description": "Get a specific product by ID with category and variants"
					},
					"response": []
				},
				{
					"name": "Add Product",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Tester2",
									"type": "text"
								},
								{
									"key": "slug",
									"value": "tester2",
									"type": "text"
								},
								{
									"key": "description",
									"value": "Advanced test set with premium pieces",
									"type": "text"
								},
								{
									"key": "short-description",
									"value": "Premium test set",
									"type": "text"
								},
								{
									"key": "number-of-players",
									"value": "2-4",
									"type": "text"
								},
								{
									"key": "playing-time",
									"value": "30-60",
									"type": "text"
								},
								{
									"key": "community-age",
									"value": "8+",
									"type": "text"
								},
								{
									"key": "complexity",
									"value": "Medium",
									"type": "text"
								},
								{
									"key": "rating",
									"value": "4.5",
									"type": "text"
								},
								{
									"key": "price",
									"value": "29.99",
									"type": "text"
								},
								{
									"key": "stock",
									"value": "50",
									"type": "text"
								},
								{
									"key": "category-ids",
									"value": "1,2",
									"type": "text"
								},
								{
									"key": "awards",
									"value": "test1,test2,test3",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{BaseURL}}/product/add",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"product",
								"add"
							]
						},
						"description": "Create a new product (form data)"
					},
					"response": []
				},
				{
					"name": "Update Product",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "6",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Updated Chess Master Pro",
									"type": "text"
								},
								{
									"key": "slug",
									"value": "updated-chess-master-pro",
									"type": "text"
								},
								{
									"key": "description",
									"value": "Updated description for the chess set",
									"type": "text"
								},
								{
									"key": "short-description",
									"value": "Updated short description",
									"type": "text"
								},
								{
									"key": "number-of-players",
									"value": "2",
									"type": "text"
								},
								{
									"key": "playing-time",
									"value": "45",
									"type": "text"
								},
								{
									"key": "community-age",
									"value": "10+",
									"type": "text"
								},
								{
									"key": "complexity",
									"value": "3.5",
									"type": "text"
								},
								{
									"key": "rating",
									"value": "9.99",
									"type": "text"
								},
								{
									"key": "price",
									"value": "39.99",
									"type": "text"
								},
								{
									"key": "stock",
									"value": "25",
									"type": "text"
								},
								{
									"key": "category-ids",
									"value": "1",
									"type": "text"
								},
								{
									"key": "awards",
									"value": "test1,test2,test3",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{BaseURL}}/product/update",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"product",
								"update"
							]
						},
						"description": "Update an existing product"
					},
					"response": []
				},
				{
					"name": "Delete Product",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/product/10",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"product",
								"10"
							]
						},
						"description": "Delete a product by ID"
					},
					"response": []
				}
			]
		},
		{
			"name": "Categories",
			"item": [
				{
					"name": "List Categories",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/category/list?page=1&page-size=10&date-from=2024-01-01&name=&slug=family-games&has-products=&min-products-count=5&sort-by=created-date-time&sort-order=desc",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"category",
								"list"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "page-size",
									"value": "10"
								},
								{
									"key": "date-from",
									"value": "2024-01-01"
								},
								{
									"key": "date-to",
									"value": "2024-12-31",
									"disabled": true
								},
								{
									"key": "name",
									"value": ""
								},
								{
									"key": "slug",
									"value": "family-games"
								},
								{
									"key": "has-products",
									"value": ""
								},
								{
									"key": "min-products-count",
									"value": "5"
								},
								{
									"key": "max-products-count",
									"value": "5",
									"disabled": true
								},
								{
									"key": "sort-by",
									"value": "created-date-time"
								},
								{
									"key": "sort-order",
									"value": "desc"
								}
							]
						},
						"description": "Get paginated list of categories with filtering and sorting"
					},
					"response": []
				},
				{
					"name": "Get Category by Slug",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/category/strategy-games",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"category",
								"strategy-games"
							]
						},
						"description": "Get a specific category by ID with products count"
					},
					"response": []
				},
				{
					"name": "Add Category",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Testing Games",
									"type": "text"
								},
								{
									"key": "slug",
									"value": "testing-games",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{BaseURL}}/category/add",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"category",
								"add"
							]
						},
						"description": "Create a new category"
					},
					"response": []
				},
				{
					"name": "Update Category",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "id",
									"value": "8",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Updated Testing Games",
									"type": "text"
								},
								{
									"key": "slug",
									"value": "updated-testing-games",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{BaseURL}}/category/update",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"category",
								"update"
							]
						},
						"description": "Update an existing category"
					},
					"response": []
				},
				{
					"name": "Delete Category",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/category/8",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"category",
								"8"
							]
						},
						"description": "Delete a category by ID"
					},
					"response": []
				}
			]
		},
		{
			"name": "Images",
			"item": [
				{
					"name": "Add Image",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "productId",
									"value": "5",
									"type": "text"
								},
								{
									"key": "images",
									"type": "file",
									"src": "postman-cloud:///1f03bfed-d2af-4f80-bdc3-e9b893384697"
								}
							]
						},
						"url": {
							"raw": "{{BaseURL}}/image/add",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"image",
								"add"
							]
						},
						"description": "Add an image to a product"
					},
					"response": []
				},
				{
					"name": "Update IsPrimary",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "imageId",
									"value": "1",
									"type": "text",
									"disabled": true
								},
								{
									"key": "isPrimary",
									"value": "true",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{BaseURL}}/image/set-primary/1",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"image",
								"set-primary",
								"1"
							]
						},
						"description": "Update image primary status"
					},
					"response": []
				},
				{
					"name": "Delete Image",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/image/18",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"image",
								"18"
							]
						},
						"description": "Delete an image by ID"
					},
					"response": []
				}
			]
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Set token and refresh token as collection variables\", function () {\r",
									"    pm.expect(responseData.token).to.exist;\r",
									"    pm.collectionVariables.set(\"token\", responseData.token);\r",
									"    \r",
									"    pm.expect(responseData.refreshToken).to.exist;\r",
									"    pm.collectionVariables.set(\"refreshToken\", responseData.refreshToken);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"admin\",\n  \"password\": \"password\"\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/auth/login",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Set token and refresh token as collection variables\", function () {\r",
									"    pm.expect(responseData.token).to.exist;\r",
									"    pm.collectionVariables.set(\"token\", responseData.token);\r",
									"    \r",
									"    pm.expect(responseData.refreshToken).to.exist;\r",
									"    pm.collectionVariables.set(\"refreshToken\", responseData.refreshToken);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
						},
						"url": {
							"raw": "{{BaseURL}}/auth/refresh",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"auth",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate Token",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/auth/validate",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"auth",
								"validate"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "BaseURL",
			"value": "https://localhost:7080",
			"type": "string"
		},
		{
			"key": "refreshToken",
			"value": "",
			"type": "default"
		},
		{
			"key": "jwtToken",
			"value": "",
			"type": "default"
		},
		{
			"key": "token",
			"value": ""
		}
	]
}